!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();!function(){d1.DiyaSelector.prototype.shell=function(command,args,cols,rows,term,callback){var _this=this;this.request({service:"shell",func:"RegisterProcess",data:{command:command,args:args,cols:cols,rows:rows,term:term}},function(peerId,err,termId){if(err)return callback(peerId,err,null);_this._connection._d1inst(peerId).openSocket("/var/run/diya/shell.sock",function(peerId,err,socket){if(err)return callback(peerId,err,null);socket.write(termId+"\n"),callback(peerId,null,new Shell(_this._connection._d1inst,peerId,termId,socket))})})};var Shell=function(){function Shell(d1inst,peerId,termId,socket){_classCallCheck(this,Shell),this._d1inst=d1inst,this._peerId=peerId,this._termId=termId,this.socket=socket}return _createClass(Shell,[{key:"resize",value:function(cols,rows){var _this2=this;this._d1inst(this._peerId).request({service:"shell",func:"ResizeShell",data:{process_id:this._termId,cols:cols,rows:rows}},function(peerId,err,data){console.log("resized term "+_this2._termId)})}},{key:"close",value:function(){this.socket.disconnect()}}]),Shell}()}()},{}]},{},[1]);
